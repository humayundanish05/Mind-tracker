// üåü Mood Responses
const moodResponses = {
  "üòä": ["ÿÆŸàÿ¥€å ÿ¢Ÿæ ⁄©€í ÿßŸÜÿØÿ± ÿ≥€í ÿ¢ÿ™€å €Å€í€î üòä", "ÿ≤ŸÜÿØ⁄Ø€å ⁄©€í €å€Å ŸÑŸÖÿ≠€í ŸÇ€åŸÖÿ™€å €Å€å⁄∫€î üå∏", "ÿ¢Ÿæ ⁄©€å ŸÖÿ≥⁄©ÿ±ÿß€ÅŸπ ÿ±Ÿàÿ¥ŸÜ€å €Å€í€î ‚ú®", "ÿÆŸàÿ¥ ÿ±€ÅŸÜÿß ÿß€å⁄© ŸÜÿπŸÖÿ™ €Å€í€î üôè", "ÿ¢Ÿæ ⁄©ÿß ÿØŸÑ ÿ±Ÿàÿ¥ŸÜ€å ÿ≥€í ÿ®⁄æÿ±ÿß €Å€í€î üíñ", "€å€Å ÿØŸÜ ÿÆŸàÿ®ÿµŸàÿ±ÿ™ €Å€íÿå ÿ¨€åÿ≥€í ÿ¢Ÿæ€î üåû", "ŸÖÿ≥⁄©ÿ±ÿß€ÅŸπ ÿØŸÑ ÿ¨€åÿ™ ŸÑ€åÿ™€å €Å€í€î üòä", "ÿ¢Ÿæ ⁄©ÿß ⁄Ü€Åÿ±€Å ÿ±Ÿàÿ¥ŸÜ€å ÿ®⁄©⁄æ€åÿ± ÿ±€Åÿß €Å€í€î üåü", "ŸæŸèÿ±ÿ≥⁄©ŸàŸÜ ŸÑŸÖÿ≠€í ÿ¢Ÿæ ⁄©€í ŸÑ€å€í €Å€å⁄∫€î üòå", "€Åÿ± ÿÆŸàÿ¥ ŸÑŸÖÿ≠€Å ŸÇ€åŸÖÿ™€å €Å€í€î üí´", "ÿÆŸàÿØ ÿ≥€í ŸÖÿ≠ÿ®ÿ™ ÿ®⁄æ€å ÿÆŸàÿ¥€å €Å€í€î üíï", "ÿÆŸàÿ¥€å ⁄Ü⁄æŸàŸπ€å ÿ®ÿßÿ™Ÿà⁄∫ ŸÖ€å⁄∫ ⁄Ü⁄æŸæ€å €ÅŸàÿ™€å €Å€í€î üå∑", "ÿ¢Ÿæ ⁄©€å ÿÆŸàÿ¥€å ÿØŸàÿ≥ÿ±Ÿà⁄∫ ⁄©Ÿà ÿ®⁄æ€å ŸÖÿ™ÿßÿ´ÿ± ⁄©ÿ±ÿ™€å €Å€í€î üòÑ", "ÿÆŸàÿ¥ ÿ±€ÅŸÜÿß ÿ®€ÅÿßÿØÿ±€å €Å€í€î üí™", "ÿ¢Ÿæ ŸÖÿ´ÿ®ÿ™ ÿ™ŸàÿßŸÜÿßÿ¶€å €Å€å⁄∫€î üîÜ", "ÿ≤ŸÜÿØ⁄Ø€å ⁄©€å ÿ±Ÿàÿ¥ŸÜ€å ÿ¢Ÿæ ⁄©€í ÿ≥ÿßÿ™⁄æ €Å€í€î üåà", "ÿÆŸàÿ¥€å ⁄©ÿß ÿßŸÜÿ™ÿÆÿßÿ® ÿß€å⁄© ÿ∑ÿßŸÇÿ™ €Å€í€î ‚ú®", "ÿ¢Ÿæ ⁄©ÿß ÿ≥⁄©ŸàŸÜ ŸÇÿßÿ®ŸÑ ŸÇÿØÿ± €Å€í€î üåø", "ÿÆŸàÿ¥ ŸÑŸÖÿ≠Ÿà⁄∫ ⁄©ÿß ÿ¥⁄©ÿ±€å€Å ÿßÿØÿß ⁄©ÿ±€å⁄∫€î ü§≤", "ÿ¢Ÿæ ÿ±Ÿàÿ¥ŸÜ€å ⁄©€í ŸÇÿßÿ®ŸÑ €Å€å⁄∫€î üåü"],
  "üò°": ["ÿ∫ÿµ€í ⁄©Ÿà ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±ŸÜÿß ÿ®⁄æ€å ÿßŸÜÿ≥ÿßŸÜ€å ÿ®ÿßÿ™ €Å€í€î üò°", "⁄Ø€Åÿ±€å ÿ≥ÿßŸÜÿ≥ ŸÑ€å⁄∫ÿå €å€Å ŸàŸÇÿ™ ÿ®⁄æ€å ⁄Øÿ≤ÿ± ÿ¨ÿßÿ¶€í ⁄Øÿß€î üå¨Ô∏è", "ŸæŸèÿ±ÿ≥⁄©ŸàŸÜ ÿ±€Å€å⁄∫ÿå ÿ¢Ÿæ ⁄©ÿß ÿ≥⁄©ŸàŸÜ ÿß€ÅŸÖ €Å€í€î üßò", "ÿ∫ÿµ€Å ŸàŸÇÿ™€å €Å€íÿå ÿ¢Ÿæ ⁄©€å ÿßÿµŸÑ ÿ±Ÿàÿ¥ŸÜ€å €Å€í€î üî•", "ÿÆÿßŸÖŸàÿ¥€å ŸÖ€å⁄∫ ÿ∑ÿßŸÇÿ™ €Å€í€î ü§ê", "€Åÿ± ÿ¨ÿ∞ÿ®ÿßÿ™ ⁄©€í Ÿæ€å⁄Ü⁄æ€í ÿß€å⁄© ⁄©€ÅÿßŸÜ€å €Å€í€î üìñ", "ÿÆŸàÿØ ⁄©Ÿà ÿ≥ŸÜÿ®⁄æÿßŸÑŸÜÿß ÿ®€ÅÿßÿØÿ±€å €Å€í€î üõ°Ô∏è", "ŸæÿßŸÜ€å Ÿæ€å ŸÑ€å⁄∫ÿå ÿÆŸàÿØ Ÿæÿ± ŸÖ€Åÿ±ÿ®ÿßŸÜ ÿ±€Å€å⁄∫€î üíß", "ÿ¢Ÿæ ⁄©€å Ÿæÿ±ÿ≥⁄©ŸàŸÜ ŸÅÿ∑ÿ±ÿ™ ŸÑŸàŸπ ÿ¢ÿ¶€í ⁄Ø€å€î üåø", "⁄ÜŸÜÿØ ŸÑŸÖÿ≠€í ÿÆÿßŸÖŸàÿ¥€å ÿ®€Åÿ™ ⁄©⁄Ü⁄æ ÿ®ÿØŸÑ ÿ≥⁄©ÿ™€í €Å€å⁄∫€î ‚è≥", "€å€Å ŸàŸÇÿ™ ÿ®⁄æ€å ⁄Øÿ≤ÿ± ÿ¨ÿßÿ¶€í ⁄Øÿß€î üìÜ", "ÿÆŸàÿØ ⁄©Ÿà ÿ≥ŸÜÿ®⁄æÿßŸÑŸÜÿß ÿ≥ÿ® ÿ≥€í ÿ®⁄ë€å ÿ¨€åÿ™ €Å€í€î üèÜ", "ÿ¢Ÿæ ⁄©€í ÿ¨ÿ∞ÿ®ÿßÿ™ ÿ¢Ÿæ ⁄©€å ÿ∑ÿßŸÇÿ™ €Å€å⁄∫€î üí•", "€Åÿ± ÿ∑ŸàŸÅÿßŸÜ ⁄©€í ÿ®ÿπÿØ ÿ≥⁄©ŸàŸÜ €ÅŸàÿ™ÿß €Å€í€î üå§Ô∏è", "ÿµÿ®ÿ± ⁄©€å ÿ∑ÿßŸÇÿ™ ÿ¢Ÿæ ŸÖ€å⁄∫ €Å€í€î üïäÔ∏è", "ÿ¢Ÿæ ⁄©ŸÜŸπÿ±ŸàŸÑ ŸÖ€å⁄∫ €Å€å⁄∫€î üéõÔ∏è", "ÿØŸÑ ⁄©Ÿà ÿ™⁄æŸà⁄ëÿß ŸàŸÇÿ™ ÿØ€å⁄∫€î ‚ù§Ô∏è", "ÿ∫ŸÖÿ≤ÿØ€Å ŸÑŸÖÿ≠Ÿà⁄∫ ŸÖ€å⁄∫ ŸÜÿ±ŸÖ€å ÿ∂ÿ±Ÿàÿ±€å €Å€í€î üçÉ", "ÿ¢Ÿæ ⁄©€å ÿßŸÖŸÜ Ÿæÿ≥ŸÜÿØ€å ŸÇ€åŸÖÿ™€å €Å€í€î ‚òÆÔ∏è", "ÿ±Ÿàÿ¥ŸÜ€å ÿ¢Ÿæ ⁄©€å ŸÅÿ∑ÿ±ÿ™ ŸÖ€å⁄∫ €Å€í€î ‚ú®"],
  "üòÇ": ["€ÅŸÜÿ≥€å ÿ≥ÿ® ÿ≥€í ÿß⁄Ü⁄æ€å ÿØŸàÿß €Å€í€î üòÇ", "€å€Å ŸÑŸÖÿ≠€Å ŸÖÿ≤€í ⁄©ÿß €Å€í! üòÜ", "ÿ¢Ÿæ ⁄©ÿß €ÅŸÜÿ≥ŸÜÿß ÿØŸÑ ⁄©Ÿà ÿÆŸàÿ¥€å ÿØ€åÿ™ÿß €Å€í€î ü•∞", "ÿ≤ŸÜÿØ⁄Ø€å ŸÖ€å⁄∫ €ÅŸÜÿ≥€å ÿ®€Åÿ™ ÿ∂ÿ±Ÿàÿ±€å €Å€í€î üéâ", "ÿ¢Ÿæ ⁄©€å €ÅŸÜÿ≥€å ŸÖ€å⁄∫ ÿ¨ÿßÿØŸà €Å€í€î ‚ú®", "ŸÖÿ≥⁄©ÿ±ÿßÿ¶€å⁄∫ÿå €å€Å ÿ¢Ÿæ Ÿæÿ± ÿ¨⁄Üÿ™ÿß €Å€í€î üòÑ", "ÿÆŸàÿ¥€åÿß⁄∫ ÿ®ÿßŸÜŸπŸÜ€í ⁄©ÿß ŸàŸÇÿ™ €Å€í€î ü§ó", "€Åÿ± ŸÇ€ÅŸÇ€Å€Å ÿ≤ŸÜÿØ⁄Ø€å ⁄©ÿß ÿ™ÿ≠ŸÅ€Å €Å€í€î üéÅ", "ÿ¢Ÿæ ⁄©€å ÿÆŸàÿ¥€å ŸÇÿØÿ±ÿ™€å €Å€í€î üåà", "ÿÆŸàÿØ Ÿæÿ± €ÅŸÜÿ≥ŸÜÿß ÿ¢ÿ≤ÿßÿØ€å €Å€í€î üïäÔ∏è", "€ÅŸÜÿ≥€å ÿ≥€í ÿØŸÑ €ÅŸÑ⁄©ÿß €ÅŸàÿ™ÿß €Å€í€î üçÉ", "ÿØŸÑ ÿ≥€í €ÅŸÜÿ≥ŸÜÿß ÿ±Ÿàÿ≠ ⁄©€å ÿ∫ÿ∞ÿß €Å€í€î üòç", "€ÅŸÜÿ≥€å ⁄©ÿß ŸÖÿ∑ŸÑÿ® €Å€í ÿ¢Ÿæ ÿ≤ŸÜÿØ€Å €Å€å⁄∫€î ‚ù§Ô∏è", "€å€Å ŸÑŸÖÿ≠€í €åÿßÿØ⁄Øÿßÿ± €Å€å⁄∫€î üì∏", "ÿ¢Ÿæ ⁄©ÿß €ÅŸÜÿ≥ŸÜÿß ÿßÿ±ÿØ⁄Øÿ±ÿØ ⁄©Ÿà ÿ±Ÿàÿ¥ŸÜ ⁄©ÿ±ÿ™ÿß €Å€í€î üîÜ", "ÿÆŸàÿØ ⁄©Ÿà ÿÆŸàÿ¥ ÿØ€å⁄©⁄æŸÜÿß ÿ≥ÿ® ÿ≥€í ÿ≠ÿ≥€åŸÜ ŸÖŸÜÿ∏ÿ± €Å€í€î üñºÔ∏è", "ÿ≤ŸÜÿØ⁄Ø€å ÿß€å⁄© ÿÆŸàÿ®ÿµŸàÿ±ÿ™ ŸÖÿ∞ÿßŸÇ ÿ®⁄æ€å €Å€í€î üòã", "ŸÇ€ÅŸÇ€Å€í ŸÖÿ≠ÿ®ÿ™ ⁄©€í ŸÜÿ¥ÿßŸÜ €Å€å⁄∫€î üíì", "ÿÆŸàÿ¥€å contagious €ÅŸàÿ™€å €Å€íÿå ÿ®ÿßŸÜŸπ€å⁄∫€î ü´Ç", "€ÅŸÜÿ≥€å ⁄©€í Ÿæ€å⁄Ü⁄æ€í ⁄Ü⁄æŸæ€å ÿ≥⁄Üÿßÿ¶€å ⁄©Ÿà ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±€å⁄∫€î üîç"],
  "ü•≤": ["ÿßÿØÿßÿ≥€å ⁄©€í ÿ≥ÿßÿ™⁄æ ÿ®⁄æ€å ÿÆŸàÿ®ÿµŸàÿ±ÿ™€å €Å€í€î ü•≤", "ÿ¢Ÿæ ÿ™ŸÜ€Åÿß ŸÜ€Å€å⁄∫ €Å€å⁄∫€î ü§ù", "ÿßÿ≠ÿ≥ÿßÿ≥ÿßÿ™ ⁄©Ÿà ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±ŸÜÿß ÿ®€ÅÿßÿØÿ±€å €Å€í€î ‚ù§Ô∏è‚Äçüî•", "€å€Å ŸàŸÇÿ™ ⁄Øÿ≤ÿ± ÿ¨ÿßÿ¶€í ⁄Øÿß€î üï∞Ô∏è", "ÿ¢Ÿæ ⁄©Ÿà ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±ŸÜ€í ⁄©€å ÿßÿ¨ÿßÿ≤ÿ™ €Å€í€î üåßÔ∏è", "ÿßÿØÿßÿ≥€å ÿ®⁄æ€å ÿ≤ŸÜÿØ⁄Ø€å ⁄©ÿß ÿ≠ÿµ€Å €Å€í€î üß©", "ÿÆÿßŸÖŸàÿ¥€å ÿ®⁄æ€å ÿßÿ∏€Åÿßÿ± €Å€í€î ü§´", "€Åÿ± ÿ¢ŸÜ⁄©⁄æ ⁄©€í Ÿæ€å⁄Ü⁄æ€í ÿß€å⁄© ⁄©€ÅÿßŸÜ€å €Å€í€î üëÅÔ∏è", "ÿØŸÑ ⁄©Ÿà ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±ŸÜ€í ÿØ€å⁄∫€î üíì", "Ÿæÿ±€åÿ¥ÿßŸÜ€å ŸÖ€å⁄∫ ÿ®⁄æ€å ÿß€å⁄© ÿ±Ÿàÿ¥ŸÜ€å ⁄Ü⁄æŸæ€å €ÅŸàÿ™€å €Å€í€î üïØÔ∏è", "ÿ¢ŸÜÿ≥Ÿà ⁄©ŸÖÿ≤Ÿàÿ±€å ŸÜ€Å€å⁄∫ÿå ÿ∑ÿßŸÇÿ™ ⁄©€å ŸÜÿ¥ÿßŸÜ€å €Å€å⁄∫€î üíß", "ÿÆŸàÿØ Ÿæÿ± ŸÖ€Åÿ±ÿ®ÿßŸÜ ÿ±€Å€å⁄∫€î üß∏", "€å€Å Ÿπ⁄æ€å⁄© €Å€í ⁄©€Å ÿ¢Ÿæ Ÿπ⁄æ€å⁄© ŸÜ€Å €ÅŸà⁄∫€î üåßÔ∏è", "ÿ¢Ÿæ €Åÿ± ÿØŸÜ ÿ®€Åÿ™ÿ± €ÅŸà ÿ±€Å€í €Å€å⁄∫€î üå§Ô∏è", "ÿØ⁄©⁄æ ⁄©€í Ÿæ€å⁄Ü⁄æ€í ÿ®⁄æ€å ŸÖÿ≠ÿ®ÿ™ €Å€í€î üíò", "ÿßÿ≠ÿ≥ÿßÿ≥ ⁄©ÿ±ŸÜ€í ŸàÿßŸÑ€í ÿØŸÑ ŸÜÿß€åÿßÿ® €ÅŸàÿ™€í €Å€å⁄∫€î üíé", "ÿ¢Ÿæ ⁄©€å ⁄Ø€Åÿ±ÿßÿ¶€å ŸÇ€åŸÖÿ™€å €Å€í€î üåä", "ÿ¢Ÿæ ⁄©€å ÿÆÿßŸÖŸàÿ¥€å ⁄Ü€åÿÆ ⁄Ü€åÿÆ ⁄©ÿ± ÿ®ŸàŸÑ ÿ±€Å€å €Å€í€î üì£", "€å€Å ŸÑŸÖÿ≠ÿßÿ™ ⁄Øÿ≤ÿ± ÿ¨ÿßÿ¶€å⁄∫ ⁄Ø€í€î ü™∑", "ÿ±Ÿàÿ¥ŸÜ€å ⁄©€å ÿ∑ÿ±ŸÅ ŸÑŸàŸπŸÜÿß ŸÖŸÖ⁄©ŸÜ €Å€í€î üåà"]
};"üóø": [
  "ŸÖ€å⁄∫ ÿÆŸàÿØ €Å€å ⁄©ÿßŸÅ€å €ÅŸà⁄∫ÿå ÿ≥ÿ® ⁄©€í ŸÑ€å€í ŸÜ€Å€å⁄∫ÿå ÿ®ÿ≥ ÿßŸæŸÜ€í ŸÑ€å€í€î üíØüóø",
  "ŸÖ€å⁄∫ ÿ¨€Åÿß⁄∫ ⁄©⁄æ⁄ëÿß €ÅŸàÿ™ÿß €ÅŸà⁄∫ÿå ÿ±ÿßÿ≥ÿ™€Å Ÿà€Å€å⁄∫ ÿ≥€í ÿ®ŸÜÿ™ÿß €Å€í€î üö∂‚Äç‚ôÇÔ∏èüî•",
  "ŸÖ€å⁄∫ ⁄©ŸÖ ÿ®ŸàŸÑÿ™ÿß €ÅŸà⁄∫ÿå ŸÑ€å⁄©ŸÜ ÿ¨ÿ® ÿ®ŸàŸÑÿ™ÿß €ÅŸà⁄∫ ÿ™Ÿà ÿ®ÿßÿ™ ÿ®ŸÜ ÿ¨ÿßÿ™€å €Å€í€î ü§´üí•",
  "ÿ™ŸÖ€åÿ≤ ÿ≥€í ÿ±€ÅŸàÿå Ÿàÿ±ŸÜ€Å ÿßŸÜÿ¨ÿßŸÖ ÿÆŸàÿØ ŸÑ⁄©⁄æ ÿØŸà⁄∫€î ‚ö†Ô∏èüñãÔ∏è",
  "ŸÖ€å⁄∫ ⁄©ÿ≥€å ⁄©ÿß ÿ≥€å⁄©ŸÜ⁄à ÿ¢Ÿæÿ¥ŸÜ ŸÜ€Å€å⁄∫ €ÅŸà⁄∫€î üö´‚úåÔ∏è",
  "ŸÖ€å⁄∫ ÿ¢ÿ≥ŸÖÿßŸÜ ÿ®⁄æ€å €ÅŸà⁄∫ÿå ÿ≤ŸÖ€åŸÜ ÿ®⁄æ€å... ÿ≥ŸÖÿ¨⁄æŸÜ€í ŸàÿßŸÑ€í ÿ≥ŸÖÿ¨⁄æ ⁄Øÿ¶€í€î üååüß†",
  "ŸÖ€å⁄∫ ÿ≥ŸÑŸà €ÅŸà⁄∫ÿå ŸÑ€å⁄©ŸÜ ⁄©ÿ®⁄æ€å ÿ±⁄©ÿ™ÿß ŸÜ€Å€å⁄∫€î üê¢‚û°Ô∏èüöÄ",
  "ŸÑŸà⁄Ø ŸÖÿ¨⁄æ€í ÿ≥ŸÖÿ¨⁄æŸÜ€í ⁄©€å ⁄©Ÿàÿ¥ÿ¥ ⁄©ÿ±ÿ™€í €Å€å⁄∫ÿå ŸÖ€å⁄∫ ÿÆŸàÿØ ÿß€å⁄© ÿ±ÿßÿ≤ €ÅŸà⁄∫€î üïµÔ∏è‚Äç‚ôÇÔ∏è‚ùì",
  "ŸÖ€å⁄∫ ⁄Ü⁄æŸæ ÿ±€Åÿ™ÿß €ÅŸà⁄∫ÿå ŸÑ€å⁄©ŸÜ ŸÖ€åÿ±ÿß ÿßÿ´ÿ± €Åÿ± ÿ¨⁄Ø€Å €ÅŸàÿ™ÿß €Å€í€î üëªüåä",
  "ŸÖ€å⁄∫ Ÿà€åÿ≥ÿß ŸÜ€Å€å⁄∫ ÿ¨€åÿ≥ÿß ŸÜÿ∏ÿ± ÿ¢ÿ™ÿß €ÅŸà⁄∫ÿå ŸÖ€å⁄∫ Ÿà€åÿ≥ÿß €ÅŸà⁄∫ ÿ¨€åÿ≥ÿß ⁄©Ÿàÿ¶€å ÿ≥Ÿà⁄Ü ÿ®⁄æ€å ŸÜ€Å€å⁄∫ ÿ≥⁄©ÿ™ÿß€î üß†üåÄ",
  "ÿÆÿßŸÖŸàÿ¥€å ŸÖ€åÿ±€å ÿ∑ÿßŸÇÿ™ €Å€íÿå ÿßŸàÿ± ŸÜÿ∏ÿ±€å⁄∫ ŸÖ€åÿ±€å ÿ≤ÿ®ÿßŸÜ€î üò∂üëÄ",
  "ŸÖ€å⁄∫ ⁄ÜŸÑÿ™ÿß ⁄©ŸÖ €ÅŸà⁄∫ÿå ⁄ØŸàŸÜÿ¨ÿ™ÿß ÿ≤€åÿßÿØ€Å €ÅŸà⁄∫€î üß±üé§",
  "ŸÖ€åÿ±€í ÿ¨€åÿ≥Ÿà⁄∫ ⁄©Ÿà ŸàŸÇÿ™ ŸÜ€Å€å⁄∫ÿå ŸàŸÇÿ™ ⁄©Ÿà ŸÖ€åÿ±€í ÿ¨€åÿ≥€í ⁄Üÿß€Å€å€í €ÅŸàÿ™€í €Å€å⁄∫€î ‚è≥üëë",
  "ÿ¨Ÿà ŸÖ€åÿ±€í ÿÆŸÑÿßŸÅ ÿ®ŸàŸÑÿ™€í €Å€å⁄∫ÿå Ÿà€Å ÿ®ÿ≥ ÿ¥Ÿàÿ± ⁄©ÿ±ÿ™€í €Å€å⁄∫ÿå ÿ≠ŸÇ€åŸÇÿ™ ŸÖ€å⁄∫ ⁄àÿ±ÿ™€í €Å€å⁄∫€î üîäüò®",
  "ŸÖ€å⁄∫ ÿπÿßŸÖ ŸÜ€Å€å⁄∫ €ÅŸà⁄∫ÿå ŸÖ€å⁄∫ ÿÆÿßÿµŸà⁄∫ ŸÖ€å⁄∫ ÿÆÿßÿµ €ÅŸà⁄∫€î ü¶Åüíé",
  "ŸÖ€åÿ±€í ÿ¨Ÿàÿ™Ÿà⁄∫ ŸÖ€å⁄∫ ⁄ÜŸÑŸÜ€í ⁄©€í ŸÑ€å€í ÿ≠ŸàÿµŸÑ€Å ⁄Üÿß€Å€å€íÿå ÿπŸÇŸÑ ŸÜ€Å€å⁄∫€î üëüüî•",
  "ŸÖ€å⁄∫ Ÿà€Å €ÅŸà⁄∫ ÿ¨Ÿà ÿ¢ÿ¶€åŸÜ€í ⁄©Ÿà ÿ®⁄æ€å ÿ¥ÿ±ŸÖŸÜÿØ€Å ⁄©ÿ± ÿØ€í€î ü™ûüòé",
  "ÿ™ŸÖ ŸÖ€åÿ±€í ŸÑ€åŸàŸÑ ⁄©€í ŸÜ€Å€å⁄∫ÿå ÿÆŸàÿßÿ® €Å€å ⁄©ÿßŸÅ€å €Å€å⁄∫€î üõåüö´üéØ",
  "ŸÖ€å⁄∫ ⁄©⁄æ€åŸÑ ŸÜ€Å€å⁄∫ÿå ÿß€å⁄© ⁄Ü€åŸÑŸÜÿ¨ €ÅŸà⁄∫€î üé≤üí™",
  "ŸÖ€å⁄∫ ŸÜÿ∏ÿ± ŸÜ€Å€å⁄∫ ÿ¢ÿ™ÿßÿå ŸÖ⁄Øÿ± ŸÖÿ≠ÿ≥Ÿàÿ≥ ÿ∂ÿ±Ÿàÿ± €ÅŸàÿ™ÿß €ÅŸà⁄∫€î üå´Ô∏è‚ö°"
]

function setMood(emoji) {
  const responses = moodResponses[emoji];
  const result = responses?.length
    ? responses[Math.floor(Math.random() * responses.length)]
    : `${emoji} ÿ¢Ÿæ ⁄©ÿß ŸÖŸà⁄à ŸÖÿπŸÑŸàŸÖ ŸÜ€Å€å⁄∫ €ÅŸà ÿ≥⁄©ÿß€î`;
  document.getElementById('mood-result').textContent = result;
}

// üí≠ Reflection Prompt
const prompts = [
  "ÿ¢Ÿæ ÿßÿ≥ ŸàŸÇÿ™ ŸàÿßŸÇÿπ€å ⁄©€åÿß ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ± ÿ±€Å€í €Å€å⁄∫ÿü", "ÿß€åÿ≥€å ⁄©ŸàŸÜ ÿ≥€å ⁄Ü€åÿ≤ €Å€í ÿ¨ÿ≥€í ÿ¢Ÿæ ŸÖÿ≥ŸÑÿ≥ŸÑ ŸÖÿ§ÿÆÿ± ⁄©ÿ± ÿ±€Å€í €Å€å⁄∫ÿü",
  "ÿ¢Ÿæ ⁄©ÿ≥ ⁄©Ÿà €åÿßÿØ ⁄©ÿ±ÿ™€í €Å€å⁄∫ ŸÑ€å⁄©ŸÜ ÿ®ÿ™ÿß€åÿß ŸÜ€Å€å⁄∫ÿü", "⁄©€åÿß ⁄Ü€åÿ≤ ÿ¢Ÿæ ⁄©Ÿà ÿ≤ŸÜÿØ€Å ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±Ÿàÿßÿ™€å €Å€íÿü",
  "ÿ¢Ÿæ ÿ¨ÿ∞ÿ®ÿßÿ™€å ÿ∑Ÿàÿ± Ÿæÿ± ⁄©ÿ≥ ⁄Ü€åÿ≤ ÿ≥€í ÿ®⁄Ü ÿ±€Å€í €Å€å⁄∫ÿü", "ÿ¢ÿÆÿ±€å ÿ®ÿßÿ± ⁄©ÿ® ⁄©ÿ≥€å ŸÜ€í ÿ¢Ÿæ ⁄©Ÿà ŸàÿßŸÇÿπ€å ÿ≥ŸÖÿ¨⁄æÿßÿü",
  "⁄©ŸàŸÜ ÿ≥€å €åÿßÿØ ÿ¢Ÿæ ⁄©Ÿà ÿ≥⁄©ŸàŸÜ ÿØ€åÿ™€å €Å€íÿü"
];
function newPrompt() {
  const prompt = prompts[Math.floor(Math.random() * prompts.length)];
  document.getElementById("prompt").textContent = prompt;
}

// üåø Affirmations
const affirmationList = [
  "ÿ¢Ÿæ ⁄©ÿßŸÅ€å €Å€å⁄∫ÿå ÿ¨€åÿ≥€í €Å€å⁄∫ Ÿà€åÿ≥€í €Å€å€î", "€å€Å ŸÑŸÖÿ≠€Å ÿ®⁄æ€å ⁄Øÿ≤ÿ± ÿ¨ÿßÿ¶€í ⁄Øÿß€î", "ÿ¢Ÿæ ÿßŸæŸÜ€å ÿ≥Ÿà⁄Ü ÿ≥€í ÿ≤€åÿßÿØ€Å ŸÖÿ∂ÿ®Ÿàÿ∑ €Å€å⁄∫€î", "⁄©ÿ®⁄æ€å ⁄©ÿ®⁄æ€å ⁄©⁄æŸà ÿ¨ÿßŸÜÿß ÿ®⁄æ€å Ÿπ⁄æ€å⁄© €Å€í€î"
];
function showAffirmation() {
  const affirmation = affirmationList[Math.floor(Math.random() * affirmationList.length)];
  document.getElementById("affirmation").textContent = affirmation;
}

// üå¨Ô∏è Breathing
const box = document.getElementById("breath-box");
const affirmations = {
  inhale: ["ÿ¢Ÿæ ŸÖÿ≠ŸÅŸàÿ∏ €Å€å⁄∫€î", "ÿ¢Ÿæ ⁄©ÿßŸÅ€å €Å€å⁄∫ ÿ¨€åÿ≥€í €Å€å⁄∫€î", "ÿ±Ÿàÿ¥ŸÜ€å ÿ¢Ÿæ ⁄©€í ÿßŸÜÿØÿ± €Å€í€î", "€Åÿ± ÿ≥ÿßŸÜÿ≥ ÿ≤ŸÜÿØ⁄Ø€å ⁄©€å ŸÜÿπŸÖÿ™ €Å€í€î", "ÿ¢Ÿæ Ÿæ€åÿßÿ± ⁄©€í ŸÇÿßÿ®ŸÑ €Å€å⁄∫€î", "ÿ¢Ÿæ ŸÖ⁄©ŸÖŸÑ €Å€å⁄∫€î"],
  hold: ["€å€Å ŸÑŸÖÿ≠€Å ÿ¢Ÿæ ⁄©ÿß €Å€í€î", "ÿßÿ®⁄æ€å ÿ®ÿ≥ ŸÖÿ≠ÿ≥Ÿàÿ≥ ⁄©ÿ±€å⁄∫€î", "ÿÆÿßŸÖŸàÿ¥€å ŸÖ€å⁄∫ ÿ≥⁄©ŸàŸÜ €Å€í€î", "ŸàŸÇÿ™ ÿ±⁄© ⁄Ø€åÿß €Å€íÿå ÿµÿ±ŸÅ ÿ¢Ÿæ €Å€å⁄∫€î"],
  exhale: ["ÿ¨ÿßŸÜ€í ÿØ€å⁄∫...", "ÿ≥⁄©ŸàŸÜ €Å€í ÿ¢Ÿæ ŸÖ€å⁄∫€î", "Ÿæÿ±€åÿ¥ÿßŸÜ€åÿß⁄∫ €ÅŸàÿß ⁄©€å ÿ∑ÿ±ÿ≠ ÿß⁄ë ÿ±€Å€å €Å€å⁄∫€î", "ÿÆŸàÿØ ⁄©Ÿà ÿ¢ÿ≤ÿßÿØ ⁄©ÿ±€å⁄∫€î"]
};

let timerInterval, breathingTimeout, timeLeft = 0, breathingPaused = false;

function getRandom(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

function fadeText(text, phaseClass) {
  box.className = '';
  box.offsetWidth;
  box.textContent = text;
  box.classList.add("fade", phaseClass);
}

function startBreathingCycle() {
  if (!box || breathingPaused) return;
  fadeText(getRandom(affirmations.inhale), 'phase-inhale');
  breathingTimeout = setTimeout(() => {
    if (breathingPaused) return;
    fadeText(getRandom(affirmations.hold), 'phase-hold');
    breathingTimeout = setTimeout(() => {
      if (breathingPaused) return;
      fadeText(getRandom(affirmations.exhale), 'phase-exhale');
      breathingTimeout = setTimeout(startBreathingCycle, 2000);
    }, 2000);
  }, 2000);
}

// ‚è±Ô∏è Meditation Timer
function startTimer() {
  const input = parseInt(document.getElementById('timeInput').value);
  if (isNaN(input) || input <= 0) return;
  clearInterval(timerInterval);
  clearTimeout(breathingTimeout);
  timeLeft = input * 60;
  breathingPaused = false;
  updateCountdown();
  startBreathingCycle();

  timerInterval = setInterval(() => {
    timeLeft--;
    updateCountdown();
    if (timeLeft <= 0) {
      clearInterval(timerInterval);
      clearTimeout(breathingTimeout);
      breathingPaused = true;
      alert("‚è≥ ŸàŸÇÿ™ ŸÖ⁄©ŸÖŸÑ €ÅŸàÿß! ÿ≥⁄©ŸàŸÜ ÿ≥€í ÿ≥ÿßŸÜÿ≥ ŸÑ€å⁄∫€î");
    }
  }, 1000);
}

function pauseTimer() {
  clearInterval(timerInterval);
  clearTimeout(breathingTimeout);
  breathingPaused = true;
}

function resetTimer() {
  clearInterval(timerInterval);
  clearTimeout(breathingTimeout);
  timeLeft = 0;
  breathingPaused = true;
  updateCountdown();
  box.textContent = "Ÿπÿßÿ¶ŸÖÿ± ÿ¥ÿ±Ÿàÿπ ⁄©ÿ±€å⁄∫";
  box.className = '';
}

function updateCountdown() {
  const min = String(Math.floor(timeLeft / 60)).padStart(2, '0');
  const sec = String(timeLeft % 60).padStart(2, '0');
  document.getElementById('countdown').textContent = `${min}:${sec}`;
}

// üß† UI Enhancements
window.addEventListener("DOMContentLoaded", () => {
  const audio = document.getElementById("audio");
  const volumeSlider = document.getElementById("volumeSlider");

  if (audio && volumeSlider) {
    audio.volume = parseFloat(volumeSlider.value);
    volumeSlider.addEventListener("input", () => {
      audio.volume = parseFloat(volumeSlider.value);
    });
  }

  document.getElementById("modeToggle").addEventListener("change", (e) => {
    document.body.classList.toggle("light-mode", e.target.checked);
  });

  window.addEventListener("scroll", () => {
    const scrollBar = document.getElementById("scrollBar");
    const totalHeight = document.body.scrollHeight - window.innerHeight;
    scrollBar.style.width = `${(window.scrollY / totalHeight) * 100}%`;
  });

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) entry.target.classList.add("visible");
    });
  }, { threshold: 0.2 });

  document.querySelectorAll(".section").forEach(sec => observer.observe(sec));

  document.querySelectorAll("button").forEach(btn => {
    btn.addEventListener("click", () => {
      const color = getRandomGlowColor();
      btn.style.boxShadow = `0 0 25px 10px ${color}`;
      setTimeout(() => {
        btn.style.boxShadow = `0 0 10px ${color}`;
      }, 1600);
    });
  });

  function getRandomGlowColor() {
    const colors = ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)', 'rgba(255, 159, 64, 0.8)', 'rgba(0, 255, 140, 0.8)'];
    return colors[Math.floor(Math.random() * colors.length)];
  }

  // üéß Audio Player
  const playPauseBtn = document.getElementById("playPauseBtn");
  const seekBar = document.getElementById("seekBar");
  const currentTimeEl = document.getElementById("currentTime");
  const durationEl = document.getElementById("duration");

  playPauseBtn.addEventListener("click", () => {
    if (audio.paused) {
      audio.play();
      playPauseBtn.textContent = "‚è∏Ô∏è";
    } else {
      audio.pause();
      playPauseBtn.textContent = "‚ñ∂Ô∏è";
    }
  });

  audio.addEventListener("loadedmetadata", () => {
    seekBar.max = Math.floor(audio.duration);
    durationEl.textContent = formatTime(audio.duration);
  });

  audio.addEventListener("timeupdate", () => {
    seekBar.value = Math.floor(audio.currentTime);
    currentTimeEl.textContent = formatTime(audio.currentTime);
  });

  seekBar.addEventListener("input", () => {
    audio.currentTime = seekBar.value;
  });

  function formatTime(seconds) {
    const min = Math.floor(seconds / 60).toString().padStart(2, "0");
    const sec = Math.floor(seconds % 60).toString().padStart(2, "0");
    return `${min}:${sec}`;
  }

  // ‚è©‚è™ Extra Buttons
  document.getElementById("rewind").addEventListener("click", () => {
    audio.currentTime = Math.max(0, audio.currentTime - 10);
  });

  document.getElementById("forward").addEventListener("click", () => {
    audio.currentTime = Math.min(audio.duration, audio.currentTime + 10);
  });

  document.getElementById("loopBtn").addEventListener("click", () => {
    audio.loop = !audio.loop;
    document.getElementById("loopBtn").style.background = audio.loop ? "#00adb5" : "";
  });

  const playlist = ["Music6.mp3", "music5.mp3", "Music4.mp3"];
  let currentTrackIndex = 0;

  function loadTrack(index) {
    if (index >= 0 && index < playlist.length) {
      currentTrackIndex = index;
      audio.src = playlist[index];
      audio.play();
      playPauseBtn.textContent = "‚è∏Ô∏è";
    }
  }

  document.getElementById("nextTrack").addEventListener("click", () => {
    const next = (currentTrackIndex + 1) % playlist.length;
    loadTrack(next);
  });

  document.getElementById("prevTrack").addEventListener("click", () => {
    const prev = (currentTrackIndex - 1 + playlist.length) % playlist.length;
    loadTrack(prev);
  });

  loadTrack(0); // First track

  // üéµ Beat Visualizer
  let audioCtx, source, analyser;
  const playerBox = document.querySelector('.custom-player');

  function setupBeatVisualizer() {
    if (!audioCtx) {
      audioCtx = new (window.AudioContext || window.webkitAudioContext)();
      source = audioCtx.createMediaElementSource(audio);
      analyser = audioCtx.createAnalyser();

      source.connect(analyser);
      analyser.connect(audioCtx.destination);
      analyser.fftSize = 512;
    }

    const bufferLength = analyser.frequencyBinCount;
    const dataArray = new Uint8Array(bufferLength);

    function detectBeat() {
      requestAnimationFrame(detectBeat);
      analyser.getByteFrequencyData(dataArray);

      let bassEnergy = 0;
      for (let i = 0; i < 10; i++) {
        bassEnergy += dataArray[i];
      }
      bassEnergy = bassEnergy / 10;

      if (bassEnergy > 160) {
        playerBox.style.boxShadow = "0 0 25px rgba(0, 255, 255, 0.8)";
        playerBox.style.transform = "scale(1.04)";
        playerBox.classList.add("rainbow-beat");
      } else {
        playerBox.style.boxShadow = "0 0 8px rgba(0, 255, 255, 0.2)";
        playerBox.style.transform = "scale(1)";
        playerBox.classList.remove("rainbow-beat");
      }
    }

    detectBeat();
  }

  audio.addEventListener("play", () => {
    if (!audioCtx) {
      setupBeatVisualizer();
    } else {
      audioCtx.resume();
    }
  });
});
